{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","querySelector","classList","localStorage","setItem","console","log","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,YAAc,WAClBH,SAASI,cAAc,QAAQC,UAAY,OAC3CC,aAAaC,QAAQ,YAAa,QAClCC,QAAQC,IAAIV,WACb,EAEKW,aAAe,WACnBV,SAASI,cAAc,QAAQC,UAAY,QAC3CC,aAAaC,QAAQ,YAAa,QACnC,EAEKI,0BAA4B,WAChC,OAAOL,aAAaM,QAAQ,YAC7B,EAEKC,yBAA2B,WAC/B,OAAOC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,OAC7E,EAEKC,mBAAqB,WAEhB,SADKN,6BAA+BE,4BAC3Bd,WAAWmB,QAAUhB,YAAYgB,OACpD,EAEKC,aAAenB,SAASoB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAACC,GACpBA,EAAOC,iBAAiB,SAAS,SAACC,GAChCzB,WAAW0B,QAAUtB,cAAgBO,cACtC,GACF,IAEDI,OAAOC,WAAW,gCAAgCQ,iBAAiB,UAAU,SAACC,GAC5EA,EAAMR,QAAUjB,WAAWmB,QAAUhB,YAAYgB,OAClD,IAEDD","file":"script.js","sourcesContent":["const darkButton = document.getElementById('dark');\r\nconst lightButton = document.getElementById('light');\r\n\r\nconst setDarkMode = () => {\r\n  document.querySelector('body').classList = 'dark';\r\n  localStorage.setItem('colorMode', 'dark');\r\n  console.log(darkButton);\r\n};\r\n\r\nconst setLightMode = () => {\r\n  document.querySelector('body').classList = 'light';\r\n  localStorage.setItem('colorMode', 'light');\r\n};\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n  return localStorage.getItem('colorMode');\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'; // If preference is set or does not match anything (light is default)\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n  const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n  color == 'dark' ? darkButton.click() : lightButton.click();\r\n};\r\n\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach((button) => {\r\n  button.addEventListener('click', (event) => {\r\n    darkButton.checked ? setDarkMode() : setLightMode();\r\n  });\r\n});\r\n\r\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (event) => {\r\n  event.matches ? darkButton.click() : lightButton.click();\r\n});\r\n\r\nloadAndUpdateColor();\r\n"]}